Enums
    SomeEnum
        VALUE_A
        VALUE_B

    SomeEnum2
        VALUE_A
        VALUE_B

    SomeEnum3
        VALUE_A
        VALUE_B

CustomTypes
    DateRangeWrapper
        range: DateRange

ExternalTypes
    LegacyType

ValueObjects
    SomeId: string
    SomeOtherId: string
    SomeIntWrapper: int (startsFrom: 5)

    SomeClass
        id: SomeId
        amount: int (startsFrom: 10)

    SomeClass2
        id: SomeId
        names: string[]
        ids: SomeId[]
        enabled: bool = true

    SomeClass3
        class2Object: SomeClass2
        someEnum: SomeEnum
        class2List: SomeClass2[] = []

    SomeClass4
        otherId: OtherId
        otherClass: OtherClass
        otherIdList: OtherId[]
        otherClassList: OtherClass[]

    SomeClass5
        date: Date
        dateRange: DateRange
        dateRangeWrapper: DateRangeWrapper
        someProperty: SomeProperty
        otherProperty: OtherProperty

    SomeClass6
        someClassOpt: SomeClass?
        optString: string?
        class2List: SomeClass2[]
        sameClassList: SomeClass6[] = []

    ClassHavingOptList
        optList: SomeClass[]?

    ClassHavingOptSimpleVo
        optSimpleVo: SomeId?

    RecordClass
        id: SomeId
        amount: int

    ClassWithOptExamples
        optInt: int? (example: 1)
        optIntWrapper: SomeIntWrapper? (example: 2)

    ClassWithEnumList
        enumList: SomeEnum2[]

    ClassWithBoolField
        boolField: bool

    RecursiveClass
        meList: RecursiveClass[]
        meOpt: RecursiveClass?
        meOptList: RecursiveClass[]?

Exceptions
    SomeExtraException

Events
    SomeEvent
        someField: string
        otherClass: OtherClass

Properties
    SomeProperty
        other: OtherProperty
        id2: SomeId2?: int
        range: DateRange?
        doubleExample: double
        longExample: long
        goodName: string (from: gN)
        customData: struct

    SomeProperty2
        value: string (public)
        custom: any
        someEnum: SomeEnum
        customOpt: any? = empty

    SomePropertyEntry
        id: SomeId (idSource)

    SomeRenamedSourcePropertyEntry
        id: SomeOtherId (from: sId, idSource)

    SomeReferencingProperty
        referenceId: SomeId

    SomeRenamedReferencingProperty
        referenceId: SomeId (from: rId)

    SomeRenamedReferencingRenamedProperty
        referenceId: SomeOtherId (from: rId)

    SomeReferencingPropertyFieldList
        referenceIdList: SomeId[]

    SomeStructureWithUniqueIds
        entries: UniqueIdEntry[]

    NestedUniqueIds
        entries: UniqueIdEntry[]

    SomeStructureWithUniqueNestedIds
        nestedUniqueIds: NestedUniqueIds[]

    SomeStructureWithMultipleUniqueNestedIds
        moreNestedFields: SomeStructureWithUniqueNestedIds[]

    SomeClassWIthOtherClassUniqueIds
        otherClass: OtherClassWIthUniqueId

    SomeStructWithNestedOtherClassUniqueIds
        someNestedWithUniqueIds: SomeClassWIthOtherClassUniqueIds[]

    NestedClassLevel2
        uniqueIds: OtherClassWIthUniqueId[]

    NestedClassLevel1
        nestLevel2: NestedClassLevel2[]

    ComplexStructureWithNestedUniqueIds
        id: string
        nestLevel1: NestedClassLevel1[]

    NestedValue
        value: string
    OptionalFieldProperty
        optionalField: NestedValue?

    CustomTypesProperty
        date: Date
        dateRange: DateRange

    NestedSelfReferencingProperty
        selfSome: SelfReferencingProperty?

    SelfReferencingProperty
        optionalSelf: SelfReferencingProperty?
        listSelf: SelfReferencingProperty[]
        optionalListSelf: SelfReferencingProperty[]?
        nestedSelfReferencingProperty: NestedSelfReferencingProperty

    "SomeKey" -> SomeProperty
    "SomeSourcePropertyList" -> SomePropertyEntry[]
    "SomeRenamedSourcePropertyEntryList" -> SomeRenamedSourcePropertyEntry[]
    "SomeReferencingPropertyObject" -> SomeReferencingProperty
    "SomeReferencingPropertyList" -> SomeReferencingProperty[]
    "SomeRenamedReferencingPropertyList" -> SomeRenamedReferencingProperty[]
    "SomeRenamedReferencingRenamedPropertyList" -> SomeRenamedReferencingRenamedProperty[]
    "SomeReferencingPropertyFieldList" -> SomeReferencingPropertyFieldList
    "SomeStructureWithUniqueIdsList" -> SomeStructureWithUniqueIds[]
    "SomeStructureWithUniqueNestedIds" -> SomeStructureWithUniqueNestedIds[]
    "SomeStructureWithUniqueIdsObject" -> SomeStructureWithUniqueIds
    "SomeStructureWithUniqueIdsMultipleNest" -> SomeStructureWithMultipleUniqueNestedIds[]
    "SomeStructWithNestedOtherClassUniqueIds" -> SomeStructWithNestedOtherClassUniqueIds[]
    "ComplexStructureWithNestedUniqueIds" -> ComplexStructureWithNestedUniqueIds[]

    "ReferencingOtherProperty" -> OtherProperty
    "OptionalFieldProperties" -> OptionalFieldProperty[]

    "CustomTypesProperty" -> CustomTypesProperty
    "SelfReferencingProperty" -> SelfReferencingProperty[]

Data
    SomeData
        id: SomeId
        other: OtherData
        custom: any
        customOpt: any?
        //Here startsFrom is not generated because not long or int
        goodDataName: string (from: gDN, startsFrom: "some")

    SomeData2
        optEnum: SomeEnum?
        optCustomType: Date?

    "SomeKey" -> SomeData

Interfaces
    SomeEmptyInterface

    SomeInterface
        someEmptyMethod()

        someCommand(id: SomeId, amount: int)
            throws
                SomeException
                Some2Exception
                OtherExtraException

        SomeQueryInput
            id: SomeId
            amount: int
        someQuery(query: SomeQueryInput): SomeClass
            throws
                SomeException

        optMethod(optId: SomeId?): SomeClass?

        methodWithListOfSimpleVO(list: SomeId[]): SomeId[]

        methodWithAny(i: any): any

        methodReturningOptSimpleVo(): SomeId?

    SomeInterface2
        referenceOtherClass(other: OtherClass): OtherClass
        referenceLegacyType(legacyType: LegacyType): LegacyType

    SomeInterface3
        referenceInterface(empty: SomeEmptyInterface): SomeEmptyInterface
        referenceOtherInterface(other: OtherInterface): OtherInterface

    SomeModuleHandlers
        SomeHandlerInput
            id: SomeId
            amount: int
        SomeHandlerOutput
            id: SomeId
            amount: int
        someHandler(i: SomeHandlerInput): SomeHandlerOutput
            throws
                SomeException
                Some2Exception

        someHandler2(i: SomeHandlerInput): SomeHandlerOutput

    SomeModuleDebugHandlers
        someDebugHandler(i: SomeHandlerInput): SomeHandlerOutput

        someDebugHandler2(i: SomeHandlerInput): SomeHandlerOutput

    InterfaceForTracking
        getDimension(): TrackingDimension

Kotlin
    ExternalTypePackages
        LegacyType -> com.some.pkg.legacy
    Records
        RecordClass
Web
    Http
        ExposedInterfaces
            SomeInterface
            SomeInterface2
        serverName = "someServerName2"
        baseUrl = "someService.baseUrl2"
        auth = "someService.auth2"
        urlPathPrefix = "/some/prefix"

    PlayFabHandlers
        ExposedInterfaces
            SomeModuleHandlers (behindFeatureFlag)
            SomeModuleDebugHandlers (debug)
        ErrorCodesMapping
            SomeException -> "EC1"
            Some2Exception -> "EC2"
        HandlerNamesMapping
            SomeModuleHandlers.someHandler2 -> "MyHandlerName"
            SomeModuleDebugHandlers.someDebugHandler2 -> "MyDebugHandlerName"

Fixtures
    MockedInterfaces
        SomeInterface
        SomeInterface2
        SomeModuleHandlers
        SomeModuleDebugHandlers

ViewModel
    EnumSwitches
        SomeEnum3Switch

    Elements
        SomeClassVm (clickable, draggable, withRect)
            SomeClass
                id
            button: Button
            boolSwitch: BoolSwitch
            optLabel: Label?
            someAnimation: Animation
            someInputField: InputField
            someImage: Image
            someScroll: Scroll
            someEnum3Switch: SomeEnum3Switch
            progressBar: ProgressBar

        SecondSomeClassVm
            SomeClass

        SomeClass2Vm
            SomeClass2
                enabled

        SomeClass3Vm
            SomeClass3
                class2Object
                someEnum
                class2List

        SomeClass4Vm
            SomeClass4
                otherId
                otherClass
                otherClassList

        SomeClass6Vm
            SomeClass6
                someClassOpt
                class2List

        ClassHavingOptSimpleVoVm
            ClassHavingOptSimpleVo
                optSimpleVo

        ClassWithEnumListVm
            ClassWithEnumList
                enumList

        SomeEmptyVm

        ReferencingOtherClassVm
            OtherClass

        ToggleOverride
            ClassWithBoolField
                boolField -> Toggle

        SomeDataVm
            SomeData
                id

    Windows
        SomeWindow
            State
                someId: SomeId
            someClassVm: SomeClassVm
            someClassVmList: SomeClassVm[]
            someButton: Button
            newOptVm: SomeClass6Vm?
            optEmptyVm: SomeEmptyVm?
            optReferencing: ReferencingOtherClassVm?

    Popups
        SomePopup
            State
                someId: SomeId
            someClassVm: SomeClassVm


Tracking
    Dimensions
        SomeDimension (table: "some_dimension")
            SomeClass
                id -> name // name mapping
                amount // keeping same name
            date_range: DateRange // field + custom type
        SomeDimensionWithEnum (table: "some_dimension_with_enum")
            SomeClass3
                someEnum -> enum_string // name mapping

    Events
        SomeTrackingEvent (table: "some_tracking_event")
            ClassWithOptExamples
                optInt -> optional_int_exposed
            some_dimension_id: SomeDimension // referencing other
            optional_generic_tracking_dimension_id: TrackingDimension?
            optional_int: int?

        SomeTrackingMultiplayerEvent (table: "some_tracking_mevent")
