Enums
    SomeEnum
        VALUE_A
        VALUE_B

CustomTypes
    DateRangeWrapper
        range: DateRange

ValueObjects
    SomeId: string
    SomeIntWrapper: int
    SomeId2: int

    SomeProperty
        other: OtherProperty
        id2: SomeId2?
        range: DateRange?
        doubleExample: double
        longExample: long
        goodName: string (from: gN)
        customData: struct

    SomeProperty2
        value: string (public)
        custom: any
        someEnum: SomeEnum
        customOpt: any? = empty

    SomeClass
        id: SomeId
        amount: int

    SomeClass2
        id: SomeId
        names: string[]
        ids: SomeId[]
        enabled: bool = true

    SomeClass3
        class2Object: SomeClass2
        someEnum: SomeEnum
        class2List: SomeClass2[] = []

    SomeClass4
        otherId: OtherId
        otherClass: OtherClass
        otherIdList: OtherId[]
        otherClassList: OtherClass[]

    SomeClass5
        date: Date
        dateRange: DateRange
        dateRangeWrapper: DateRangeWrapper
        someProperty: SomeProperty
        otherProperty: OtherProperty

    SomeClass6
        someClassOpt: SomeClass?
        optString: string?
        sameClassList: SomeClass6[] = []

DataClasses
    SomeData
        other: OtherData
        custom: any
        customOpt: any?
        goodDataName: string (from: gDN)

ExternalTypes
    LegacyType

Interfaces
    SomeEmptyInterface

    SomeInterface
        someEmptyMethod()
        someCommand(id: SomeId, amount: int)
            throws
                SomeException
                Some2Exception
        someQuery(id: SomeId): SomeClass
            throws
                SomeException
        optMethod(optId: SomeId?): SomeClass?

    SomeInterface2
        referenceOtherClass(other: OtherClass): OtherClass
        referenceLegacyType(legacyType: LegacyType): LegacyType

    SomeInterface3
        referenceInterface(empty: SomeEmptyInterface): SomeEmptyInterface
        referenceOtherInterface(other: OtherInterface): OtherInterface

Kotlin
    ExternalTypePackages
        LegacyType -> com.some.pkg.legacy

Web
    expose
        SomeInterface
        SomeInterface2
    serverUrl = "http://localhost:8080"