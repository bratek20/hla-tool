// DO NOT EDIT! Autogenerated by HLA tool

package com.some.pkg.somemodule.web

import com.github.bratek20.infrastructure.httpclient.api.HttpClientConfig

import com.some.pkg.somemodule.api.*

import com.some.pkg.othermodule.api.*
import com.some.pkg.typesmodule.api.*

class SomeModuleWebClientConfig(
    val value: HttpClientConfig
) {
}
class SomeInterfaceSomeCommandRequest(
    private val id: String,
    private val amount: Int
) {
    fun getId(): SomeId {
        return SomeId(id)
    }
    fun getAmount(): Int {
        return amount
    }
    companion object {
        fun create(id: SomeId, amount: Int): SomeInterfaceSomeCommandRequest {
            return SomeInterfaceSomeCommandRequest(id.value, amount)
        }
    }
}
class SomeInterfaceSomeQueryRequest(
    private val query: SomeQueryInput
) {
    fun getQuery(): SomeQueryInput {
        return query
    }
    companion object {
        fun create(query: SomeQueryInput): SomeInterfaceSomeQueryRequest {
            return SomeInterfaceSomeQueryRequest(query)
        }
    }
}
class SomeInterfaceSomeQueryResponse(
    private val value: SomeClass
) {
    fun getValue(): SomeClass {
        return value
    }
}
class SomeInterfaceOptMethodRequest(
    private val optId: String?
) {
    fun getOptId(): SomeId? {
        return optId?.let { it -> SomeId(it) }
    }
    companion object {
        fun create(optId: SomeId?): SomeInterfaceOptMethodRequest {
            return SomeInterfaceOptMethodRequest(optId?.let { it -> it.value })
        }
    }
}
class SomeInterfaceOptMethodResponse(
    private val value: SomeClass?
) {
    fun getValue(): SomeClass? {
        return value
    }
}
class SomeInterfaceMethodWithListOfSimpleVORequest(
    private val list: List<String>
) {
    fun getList(): List<SomeId> {
        return list.map { it -> SomeId(it) }
    }
    companion object {
        fun create(list: List<SomeId>): SomeInterfaceMethodWithListOfSimpleVORequest {
            return SomeInterfaceMethodWithListOfSimpleVORequest(list.map { it -> it.value })
        }
    }
}
class SomeInterfaceMethodWithListOfSimpleVOResponse(
    private val value: List<String>
) {
    fun getValue(): List<SomeId> {
        return value.map { it -> SomeId(it) }
    }
}
class SomeInterfaceMethodWithAnyRequest(
    private val i: Any
) {
    fun getI(): Any {
        return i
    }
    companion object {
        fun create(i: Any): SomeInterfaceMethodWithAnyRequest {
            return SomeInterfaceMethodWithAnyRequest(i)
        }
    }
}
class SomeInterfaceMethodWithAnyResponse(
    private val value: Any
) {
    fun getValue(): Any {
        return value
    }
}
class SomeInterfaceMethodReturningOptSimpleVoResponse(
    private val value: String?
) {
    fun getValue(): SomeId? {
        return value?.let { it -> SomeId(it) }
    }
}
class SomeInterface2ReferenceOtherClassRequest(
    private val other: OtherClass
) {
    fun getOther(): OtherClass {
        return other
    }
    companion object {
        fun create(other: OtherClass): SomeInterface2ReferenceOtherClassRequest {
            return SomeInterface2ReferenceOtherClassRequest(other)
        }
    }
}
class SomeInterface2ReferenceOtherClassResponse(
    private val value: OtherClass
) {
    fun getValue(): OtherClass {
        return value
    }
}
class SomeInterface2ReferenceLegacyTypeRequest(
    private val legacyType: com.some.pkg.legacy.LegacyType
) {
    fun getLegacyType(): com.some.pkg.legacy.LegacyType {
        return legacyType
    }
    companion object {
        fun create(legacyType: com.some.pkg.legacy.LegacyType): SomeInterface2ReferenceLegacyTypeRequest {
            return SomeInterface2ReferenceLegacyTypeRequest(legacyType)
        }
    }
}
class SomeInterface2ReferenceLegacyTypeResponse(
    private val value: com.some.pkg.legacy.LegacyType
) {
    fun getValue(): com.some.pkg.legacy.LegacyType {
        return value
    }
}