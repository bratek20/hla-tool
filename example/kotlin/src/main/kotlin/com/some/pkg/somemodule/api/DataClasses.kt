// DO NOT EDIT! Autogenerated by HLA tool

package com.some.pkg.somemodule.api

import com.some.pkg.othermodule.api.*
import com.some.pkg.typesmodule.api.*

data class SomeData(
    private var other: OtherData,
    private var custom: Any,
    private var customOpt: Any?,
    private var gDN: String,
) {
    fun getOther(): OtherData {
        return this.other
    }

    fun getCustom(): Any {
        return this.custom
    }

    fun getCustomOpt(): Any? {
        return this.customOpt
    }

    fun getGoodDataName(): String {
        return this.gDN
    }

    fun setOther(other: OtherData) {
        this.other = other
    }

    fun setCustom(custom: Any) {
        this.custom = custom
    }

    fun setCustomOpt(customOpt: Any?) {
        this.customOpt = customOpt
    }

    fun setGoodDataName(goodDataName: String) {
        this.gDN = goodDataName
    }

    companion object {
        fun create(
            other: OtherData,
            custom: Any,
            customOpt: Any?,
            goodDataName: String,
        ): SomeData {
            return SomeData(
                other = other,
                custom = custom,
                customOpt = customOpt,
                gDN = goodDataName,
            )
        }
    }
}

data class SomeData2(
    private var optEnum: String?,
    private var optCustomType: String?,
) {
    fun getOptEnum(): SomeEnum? {
        return this.optEnum?.let { it -> SomeEnum.valueOf(it) }
    }

    fun getOptCustomType(): Date? {
        return this.optCustomType?.let { it -> dateCreate(it) }
    }

    fun setOptEnum(optEnum: SomeEnum?) {
        this.optEnum = optEnum?.let { it -> it.name }
    }

    fun setOptCustomType(optCustomType: Date?) {
        this.optCustomType = optCustomType?.let { it -> dateGetValue(it) }
    }

    companion object {
        fun create(
            optEnum: SomeEnum?,
            optCustomType: Date?,
        ): SomeData2 {
            return SomeData2(
                optEnum = optEnum?.let { it -> it.name },
                optCustomType = optCustomType?.let { it -> dateGetValue(it) },
            )
        }
    }
}