// DO NOT EDIT! Autogenerated by HLA tool

using System;
using System.Collections.Generic;
using B20.Ext;
using HttpClient.Api;
using SomeModule.Api;
using OtherModule.Api;
using TypesModule.Api;

namespace SomeModule.Web {
    public class SomeModuleWebClientConfig {
        public HttpClientConfig Value { get; }

        public SomeModuleWebClientConfig(
            HttpClientConfig value
        ) {
            Value = value;
        }
    }

    public class SomeInterfaceSomeCommandRequest {
        readonly string id;
        readonly int amount;

        public SomeInterfaceSomeCommandRequest(
            string id,
            int amount
        ) {
            this.id = id;
            this.amount = amount;
        }
        public SomeId GetId() {
            return new SomeId(id);
        }
        public int GetAmount() {
            return amount;
        }
        public static SomeInterfaceSomeCommandRequest Create(SomeId id, int amount) {
            return new SomeInterfaceSomeCommandRequest(id.Value, amount);
        }
    }

    public class SomeInterfaceSomeQueryRequest {
        readonly SomeQueryInput query;

        public SomeInterfaceSomeQueryRequest(
            SomeQueryInput query
        ) {
            this.query = query;
        }
        public SomeQueryInput GetQuery() {
            return query;
        }
        public static SomeInterfaceSomeQueryRequest Create(SomeQueryInput query) {
            return new SomeInterfaceSomeQueryRequest(query);
        }
    }

    public class SomeInterfaceSomeQueryResponse {
        public readonly SomeClass value;

        public SomeInterfaceSomeQueryResponse(
            SomeClass value
        ) {
            this.value = value;
        }
    }

    public class SomeInterfaceOptMethodRequest {
        readonly string? optId;

        public SomeInterfaceOptMethodRequest(
            string? optId
        ) {
            this.optId = optId;
        }
        public Optional<SomeId> GetOptId() {
            return Optional<SomeId>.Of(optId).Map( it => new SomeId(it) );
        }
        public static SomeInterfaceOptMethodRequest Create(Optional<SomeId> optId) {
            return new SomeInterfaceOptMethodRequest(optId.Map( it => it.Value ).OrElse(null));
        }
    }

    public class SomeInterfaceOptMethodResponse {
        public readonly Optional<SomeClass> value;

        public SomeInterfaceOptMethodResponse(
            Optional<SomeClass> value
        ) {
            this.value = value;
        }
    }

    public class SomeInterfaceMethodWithListOfSimpleVORequest {
        readonly List<string> list;

        public SomeInterfaceMethodWithListOfSimpleVORequest(
            List<string> list
        ) {
            this.list = list;
        }
        public List<SomeId> GetList() {
            return list.Select( it => new SomeId(it) );
        }
        public static SomeInterfaceMethodWithListOfSimpleVORequest Create(List<SomeId> list) {
            return new SomeInterfaceMethodWithListOfSimpleVORequest(list.Select( it => it.Value ));
        }
    }

    public class SomeInterfaceMethodWithListOfSimpleVOResponse {
        public List<SomeId> Value { get; }

        public SomeInterfaceMethodWithListOfSimpleVOResponse(
            List<SomeId> value
        ) {
            Value = value;
        }
    }

    public class SomeInterfaceMethodWithAnyRequest {
        readonly object i;

        public SomeInterfaceMethodWithAnyRequest(
            object i
        ) {
            this.i = i;
        }
        public object GetI() {
            return i;
        }
        public static SomeInterfaceMethodWithAnyRequest Create(object i) {
            return new SomeInterfaceMethodWithAnyRequest(i);
        }
    }

    public class SomeInterfaceMethodWithAnyResponse {
        public readonly object value;

        public SomeInterfaceMethodWithAnyResponse(
            object value
        ) {
            this.value = value;
        }
    }

    public class SomeInterface2ReferenceOtherClassRequest {
        readonly OtherClass other;

        public SomeInterface2ReferenceOtherClassRequest(
            OtherClass other
        ) {
            this.other = other;
        }
        public OtherClass GetOther() {
            return other;
        }
        public static SomeInterface2ReferenceOtherClassRequest Create(OtherClass other) {
            return new SomeInterface2ReferenceOtherClassRequest(other);
        }
    }

    public class SomeInterface2ReferenceOtherClassResponse {
        public readonly OtherClass value;

        public SomeInterface2ReferenceOtherClassResponse(
            OtherClass value
        ) {
            this.value = value;
        }
    }

    public class SomeInterface2ReferenceLegacyTypeRequest {
        readonly LegacyType legacyType;

        public SomeInterface2ReferenceLegacyTypeRequest(
            LegacyType legacyType
        ) {
            this.legacyType = legacyType;
        }
        public LegacyType GetLegacyType() {
            return legacyType;
        }
        public static SomeInterface2ReferenceLegacyTypeRequest Create(LegacyType legacyType) {
            return new SomeInterface2ReferenceLegacyTypeRequest(legacyType);
        }
    }

    public class SomeInterface2ReferenceLegacyTypeResponse {
        public readonly LegacyType value;

        public SomeInterface2ReferenceLegacyTypeResponse(
            LegacyType value
        ) {
            this.value = value;
        }
    }
}