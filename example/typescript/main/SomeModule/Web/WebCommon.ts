// DO NOT EDIT! Autogenerated by HLA tool

namespace SomeModule.Web {
    export class SomeInterfaceSomeEmptyMethodResponse {
    }
    export class SomeInterfaceSomeCommandRequest {
        getId(): SomeId {
            return new SomeId(id)
        }
        getAmount(): number {
            return amount
        }
        static create(id: SomeId, amount: number): SomeInterfaceSomeCommandRequest {
            const instance = new SomeInterfaceSomeCommandRequest()
            instance.id = id.value
            instance.amount = amount
            return instance
        }
    }
    export class SomeInterfaceSomeCommandResponse {
    }
    export class SomeInterfaceSomeQueryRequest {
        getQuery(): SomeQueryInput {
            return query
        }
        companion object {
            create(query: SomeQueryInput): SomeInterfaceSomeQueryRequest {
                return SomeInterfaceSomeQueryRequest(query)
            }
        }
    }
    export class SomeInterfaceSomeQueryResponse {
    }
    export class SomeInterfaceOptMethodRequest {
        getOptId(): Optional<SomeId> {
            return Optional.of(optId).map(it => new SomeId(it))
        }
        companion object {
            create(optId: Optional<SomeId>): SomeInterfaceOptMethodRequest {
                return SomeInterfaceOptMethodRequest(optId.map(it => it.value).orElse(undefined))
            }
        }
    }
    export class SomeInterfaceOptMethodResponse {
    }
    export class SomeInterface2ReferenceOtherClassRequest {
        getOther(): OtherClass {
            return other
        }
        companion object {
            create(other: OtherClass): SomeInterface2ReferenceOtherClassRequest {
                return SomeInterface2ReferenceOtherClassRequest(other)
            }
        }
    }
    export class SomeInterface2ReferenceOtherClassResponse {
    }
    export class SomeInterface2ReferenceLegacyTypeRequest {
        getLegacyType(): LegacyType {
            return legacyType
        }
        companion object {
            create(legacyType: LegacyType): SomeInterface2ReferenceLegacyTypeRequest {
                return SomeInterface2ReferenceLegacyTypeRequest(legacyType)
            }
        }
    }
    export class SomeInterface2ReferenceLegacyTypeResponse {
    }
}