// DO NOT EDIT! Autogenerated by HLA tool

namespace SomeModule.Impl {
    export class SomeDimension extends TrackingDimension {
        constructor(
            someClass: SomeClass,
            date_range: DateRange
        ) {
            super()
            this.name = someClass.getId().getValue()
            this.amount = someClass.getAmount()
            this.date_range = SerializedDateRange.fromCustomType(date_range)
        }
        private readonly name: string
        private readonly amount: number
        private readonly date_range: SerializedDateRange
        getTableName(): TrackingTableName {
            return new TrackingTableName("some_dimension")
        }
    }

    export class SomeDimensionWithPrimitives extends TrackingDimension {
        constructor(
            some_string: string,
            some_int: number,
            some_long: number,
            some_double: number,
            some_bool: boolean
        ) {
            super()
            this.some_string = some_string
            this.some_int = some_int
            this.some_long = some_long
            this.some_double = some_double
            this.some_bool = some_bool
        }
        private readonly some_string: string
        private readonly some_int: number
        private readonly some_long: number
        private readonly some_double: number
        private readonly some_bool: boolean
        getTableName(): TrackingTableName {
            return new TrackingTableName("some_dimension_with_primitives")
        }
    }

    export class SomeDimensionWithEnum extends TrackingDimension {
        constructor(
            someClass3: SomeClass3
        ) {
            super()
            this.enum_string = someClass3.getSomeEnum().getName()
        }
        private readonly enum_string: string
        getTableName(): TrackingTableName {
            return new TrackingTableName("some_dimension_with_enum")
        }
    }

    export class SomeTrackingEvent extends TrackingEvent {
        constructor(
            classWithOptExamples: ClassWithOptExamples,
            some_dimension_id: SomeDimension,
            optional_generic_tracking_dimension_id: Optional<TrackingDimension>,
            optional_int: Optional<number>
        ) {
            super()
            this.optional_int_exposed = classWithOptExamples.getOptInt().orElse(undefined)
            this.some_dimension_id = some_dimension_id
            this.optional_generic_tracking_dimension_id = optional_generic_tracking_dimension_id.orElse(undefined)
            this.optional_int = optional_int.orElse(undefined)
        }
        private readonly optional_int_exposed: number | undefined
        private readonly some_dimension_id: SomeDimension
        private readonly optional_generic_tracking_dimension_id: TrackingDimension
        private readonly optional_int: number
        getTableName(): TrackingTableName {
            return new TrackingTableName("some_tracking_event")
        }
    }
}