// DO NOT EDIT! Autogenerated by HLA tool

class OtherId {
    constructor(
        readonly valueOtherId: number
    ) {}

    getValue(): number {
        return this.valueOtherId
    }

    equals(other: OtherId): boolean {
        return this.value === other.value
    }

    toString(): string {
        return this.getValue().toString()
    }

    plus(other: OtherId): OtherId {
        return new OtherId(this.getValue() + other.getValue());
    }

    minus(other: OtherId): OtherId {
        return new OtherId(this.getValue() - other.getValue());
    }

    times(amount: number): OtherId {
        return new OtherId(this.getValue() * amount);
    }
}

class OtherProperty {
    private id = NUMBER
    private name = STRING

    static create(
        id: OtherId,
        name: string,
    ): OtherProperty {
        const instance = new OtherProperty()
        instance.id = id.getValue()
        instance.name = name
        return instance
    }

    getId(): OtherId {
        return new OtherId(this.id)
    }

    getName(): string {
        return this.name
    }
}

class OtherClass {
    private id = NUMBER
    private amount = NUMBER

    static create(
        id: OtherId,
        amount: number,
    ): OtherClass {
        const instance = new OtherClass()
        instance.id = id.getValue()
        instance.amount = amount
        return instance
    }

    getId(): OtherId {
        return new OtherId(this.id)
    }

    getAmount(): number {
        return this.amount
    }
}

class OtherClassWIthUniqueId {
    private uniqueId = STRING

    static create(
        uniqueId: string,
    ): OtherClassWIthUniqueId {
        const instance = new OtherClassWIthUniqueId()
        instance.uniqueId = uniqueId
        return instance
    }

    getUniqueId(): string {
        return this.uniqueId
    }
}