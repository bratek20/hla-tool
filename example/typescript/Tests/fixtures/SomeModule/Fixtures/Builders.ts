// DO NOT EDIT! Autogenerated by HLA tool

namespace SomeModule.Builder {
    export function someId(value: string = "someValue"): SomeId {
        return new SomeId(value)
    }

    export function someIntWrapper(value: number = 0): SomeIntWrapper {
        return new SomeIntWrapper(value)
    }

    export function someId2(value: number = 0): SomeId2 {
        return new SomeId2(value)
    }

    export interface SomePropertyDef {
        other?: OtherModule.Builder.OtherPropertyDef,
        id2?: number,
        range?: TypesModule.Builder.DateRangeDef,
        doubleExample?: number,
        longExample?: number,
        goodName?: string,
        customData?: any,
    }
    export function someProperty(def?: SomePropertyDef): SomeProperty {
        const other = def?.other ?? {}
        const id2 = def?.id2 ?? undefined
        const range = def?.range ?? undefined
        const doubleExample = def?.doubleExample ?? 0
        const longExample = def?.longExample ?? 0
        const goodName = def?.goodName ?? "someValue"
        const customData = def?.customData ?? {}

        return SomeProperty.create(
            OtherModule.Builder.otherProperty(other),
            Optional.of(id2).map(it => new SomeId2(it)),
            Optional.of(range).map(it => TypesModule.Builder.dateRange(it)),
            doubleExample,
            longExample,
            goodName,
            customData,
        )
    }

    export interface SomeProperty2Def {
        value?: string,
        custom?: any,
        someEnum?: SomeEnum,
        customOpt?: any,
    }
    export function someProperty2(def?: SomeProperty2Def): SomeProperty2 {
        const value = def?.value ?? "someValue"
        const custom = def?.custom ?? {}
        const someEnum = def?.someEnum ?? SomeEnum.VALUE_A
        const customOpt = def?.customOpt ?? undefined

        return SomeProperty2.create(
            value,
            custom,
            someEnum,
            Optional.of(customOpt),
        )
    }

    export interface SomeClassDef {
        id?: string,
        amount?: number,
    }
    export function someClass(def?: SomeClassDef): SomeClass {
        const id = def?.id ?? "someValue"
        const amount = def?.amount ?? 0

        return SomeClass.create(
            new SomeId(id),
            amount,
        )
    }

    export interface SomeClass2Def {
        id?: string,
        names?: string[],
        ids?: string[],
        enabled?: boolean,
    }
    export function someClass2(def?: SomeClass2Def): SomeClass2 {
        const id = def?.id ?? "someValue"
        const names = def?.names ?? []
        const ids = def?.ids ?? []
        const enabled = def?.enabled ?? true

        return SomeClass2.create(
            new SomeId(id),
            names,
            ids.map(it => new SomeId(it)),
            enabled,
        )
    }

    export interface SomeClass3Def {
        class2Object?: SomeClass2Def,
        someEnum?: SomeEnum,
        class2List?: SomeClass2Def[],
    }
    export function someClass3(def?: SomeClass3Def): SomeClass3 {
        const class2Object = def?.class2Object ?? {}
        const someEnum = def?.someEnum ?? SomeEnum.VALUE_A
        const class2List = def?.class2List ?? []

        return SomeClass3.create(
            someClass2(class2Object),
            someEnum,
            class2List.map(it => someClass2(it)),
        )
    }

    export interface SomeClass4Def {
        otherId?: number,
        otherClass?: OtherModule.Builder.OtherClassDef,
        otherIdList?: number[],
        otherClassList?: OtherModule.Builder.OtherClassDef[],
    }
    export function someClass4(def?: SomeClass4Def): SomeClass4 {
        const otherId = def?.otherId ?? 0
        const otherClass = def?.otherClass ?? {}
        const otherIdList = def?.otherIdList ?? []
        const otherClassList = def?.otherClassList ?? []

        return SomeClass4.create(
            new OtherId(otherId),
            OtherModule.Builder.otherClass(otherClass),
            otherIdList.map(it => new OtherId(it)),
            otherClassList.map(it => OtherModule.Builder.otherClass(it)),
        )
    }

    export interface SomeClass5Def {
        date?: string,
        dateRange?: TypesModule.Builder.DateRangeDef,
        dateRangeWrapper?: DateRangeWrapperDef,
        someProperty?: SomePropertyDef,
        otherProperty?: OtherModule.Builder.OtherPropertyDef,
    }
    export function someClass5(def?: SomeClass5Def): SomeClass5 {
        const date = def?.date ?? "01/01/1970 00:00"
        const dateRange = def?.dateRange ?? {}
        const dateRangeWrapper = def?.dateRangeWrapper ?? {}
        const someProperty = def?.someProperty ?? {}
        const otherProperty = def?.otherProperty ?? {}

        return SomeClass5.create(
            TypesModule.CustomTypesMapper.dateCreate(date),
            TypesModule.Builder.dateRange(dateRange),
            dateRangeWrapper(dateRangeWrapper),
            someProperty(someProperty),
            OtherModule.Builder.otherProperty(otherProperty),
        )
    }

    export interface SomeClass6Def {
        someClassOpt?: SomeClassDef,
        optString?: string,
        sameClassList?: SomeClass6Def[],
    }
    export function someClass6(def?: SomeClass6Def): SomeClass6 {
        const someClassOpt = def?.someClassOpt ?? undefined
        const optString = def?.optString ?? undefined
        const sameClassList = def?.sameClassList ?? []

        return SomeClass6.create(
            Optional.of(someClassOpt).map(it => someClass(it)),
            Optional.of(optString),
            sameClassList.map(it => someClass6(it)),
        )
    }

    export interface SomeQueryInputDef {
        id?: string,
        amount?: number,
    }
    export function someQueryInput(def?: SomeQueryInputDef): SomeQueryInput {
        const id = def?.id ?? "someValue"
        const amount = def?.amount ?? 0

        return SomeQueryInput.create(
            new SomeId(id),
            amount,
        )
    }

    export interface DateRangeWrapperDef {
        range?: TypesModule.Builder.DateRangeDef,
    }
    export function dateRangeWrapper(def?: DateRangeWrapperDef): DateRangeWrapper {
        const range = def?.range ?? {}

        return SomeModule.CustomTypesMapper.dateRangeWrapperCreate(
            TypesModule.Builder.dateRange(range),
        )
    }

    export interface SomeDataDef {
        other?: OtherModule.Builder.OtherDataDef,
        custom?: any,
        customOpt?: any,
        goodDataName?: string,
    }
    export function someData(def?: SomeDataDef): SomeData {
        const other = def?.other ?? {}
        const custom = def?.custom ?? {}
        const customOpt = def?.customOpt ?? undefined
        const goodDataName = def?.goodDataName ?? "someValue"

        return SomeData.create(
            OtherModule.Builder.otherData(other),
            custom,
            Optional.of(customOpt),
            goodDataName,
        )
    }
}