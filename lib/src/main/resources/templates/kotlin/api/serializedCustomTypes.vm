#generateKotlinApiPackageAndImports()

#foreach($vo in $complexCustomTypes)
data class ${vo.serializableName()}(
    #foreach($field in $vo.fields)
    private val $field.name: $field.type.serializableName(),
    #end
) {
    fun toCustomType(): ${vo.name()} {
        return ${vo.constructorCall()}(
        #foreach($field in $vo.fields)
            $field.name = ${field.type.deserialize(${field.name})},
        #end
        )
    }

    companion object {
        fun fromCustomType(customType: ${vo.name()}): ${vo.serializableName()} {
            return ${vo.serializableName()}(
            #foreach($field in $vo.fields)
                ${field.name} = $field.type.serialize(${field.access("customType")}),
            #end
            )
        }
    }
}#if($foreach.hasNext)


#end#end