// DO NOT EDIT! Autogenerated by HLA tool

package com.github.bratek20.hla.types.api

import com.github.bratek20.hla.typesworld.api.HlaTypePath
import com.github.bratek20.hla.typesworld.api.hlaTypePathCreate
import com.github.bratek20.hla.typesworld.api.hlaTypePathGetValue

data class HlaType(
    private val name: String,
    private val path: String,
) {
    fun getName(): String {
        return this.name
    }

    fun getPath(): HlaTypePath {
        return hlaTypePathCreate(this.path)
    }

    companion object {
        fun create(
            name: String,
            path: HlaTypePath,
        ): HlaType {
            return HlaType(
                name = name,
                path = hlaTypePathGetValue(path),
            )
        }
    }
}

data class StructureField(
    private val name: String,
    private val type: HlaType,
) {
    fun getName(): String {
        return this.name
    }

    fun getType(): HlaType {
        return this.type
    }

    companion object {
        fun create(
            name: String,
            type: HlaType,
        ): StructureField {
            return StructureField(
                name = name,
                type = type,
            )
        }
    }
}

data class Structure(
    private val type: HlaType,
    private val fields: List<StructureField>,
) {
    fun getType(): HlaType {
        return this.type
    }

    fun getFields(): List<StructureField> {
        return this.fields
    }

    companion object {
        fun create(
            type: HlaType,
            fields: List<StructureField>,
        ): Structure {
            return Structure(
                type = type,
                fields = fields,
            )
        }
    }
}

data class Wrapper(
    private val type: HlaType,
    private val wrappedType: HlaType,
) {
    fun getType(): HlaType {
        return this.type
    }

    fun getWrappedType(): HlaType {
        return this.wrappedType
    }

    companion object {
        fun create(
            type: HlaType,
            wrappedType: HlaType,
        ): Wrapper {
            return Wrapper(
                type = type,
                wrappedType = wrappedType,
            )
        }
    }
}