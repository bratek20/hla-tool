// DO NOT EDIT! Autogenerated by HLA tool

package com.github.bratek20.hla.generation.fixtures

import com.github.bratek20.hla.facade.api.*
import com.github.bratek20.hla.facade.fixtures.*
import com.github.bratek20.hla.parsing.api.*
import com.github.bratek20.hla.parsing.fixtures.*
import com.github.bratek20.utils.directory.api.*
import com.github.bratek20.utils.directory.fixtures.*

import com.github.bratek20.hla.generation.api.*

data class GenerateArgsDef(
    var group: (ModuleGroupDef.() -> Unit) = {},
    var moduleToGenerate: String = "someValue",
    var onlyUpdate: Boolean = false,
)
fun generateArgs(init: GenerateArgsDef.() -> Unit = {}): GenerateArgs {
    val def = GenerateArgsDef().apply(init)
    return GenerateArgs.create(
        group = moduleGroup(def.group),
        moduleToGenerate = ModuleName(def.moduleToGenerate),
        onlyUpdate = def.onlyUpdate,
    )
}

data class GenerateResultDef(
    var main: (DirectoryDef.() -> Unit) = {},
    var fixtures: (DirectoryDef.() -> Unit) = {},
    var tests: (DirectoryDef.() -> Unit)? = null,
)
fun generateResult(init: GenerateResultDef.() -> Unit = {}): GenerateResult {
    val def = GenerateResultDef().apply(init)
    return GenerateResult.create(
        main = directory(def.main),
        fixtures = directory(def.fixtures),
        tests = def.tests?.let { it -> directory(it) },
    )
}